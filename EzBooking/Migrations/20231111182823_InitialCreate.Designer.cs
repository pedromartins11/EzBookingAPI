// <auto-generated />
using System;
using EzBooking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EzBooking.Migrations
{
    [DbContext(typeof(DataContext))]
<<<<<<<< HEAD:EzBooking/Migrations/20231111182823_InitialCreate.Designer.cs
    [Migration("20231111182823_InitialCreate")]
========
    [Migration("20231114152920_InitialCreate")]
>>>>>>>> UserAuthentication:EzBooking/Migrations/20231114152920_InitialCreate.Designer.cs
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EzBooking.Models.Feedback", b =>
                {
                    b.Property<int>("id_feedback")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_feedback"), 1L, 1);

                    b.Property<int>("classification")
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_feedback");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("EzBooking.Models.House", b =>
                {
                    b.Property<int>("id_house")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_house"), 1L, 1);

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("StatusHouseid")
                        .HasColumnType("int");

                    b.Property<int?>("codDoor")
                        .HasColumnType("int");

                    b.Property<int>("doorNumber")
                        .HasColumnType("int");

                    b.Property<int>("floorNumber")
                        .HasColumnType("int");

                    b.Property<int>("guestsNumber")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("postalCode")
                        .HasColumnType("int");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<double?>("priceyear")
                        .HasColumnType("float");

                    b.Property<string>("propertyAssessment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("road")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("sharedRoom")
                        .HasColumnType("bit");

                    b.HasKey("id_house");

                    b.HasIndex("StatusHouseid");

                    b.HasIndex("postalCode");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("EzBooking.Models.Payment", b =>
                {
                    b.Property<int>("id_payment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_payment"), 1L, 1);

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("paymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("paymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("paymentValue")
                        .HasColumnType("real");

                    b.Property<int>("stateid_paymentStates")
                        .HasColumnType("int");

                    b.HasKey("id_payment");

                    b.HasIndex("stateid_paymentStates");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EzBooking.Models.PaymentStates", b =>
                {
                    b.Property<int>("id_paymentStates")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_paymentStates"), 1L, 1);

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_paymentStates");

                    b.ToTable("PaymentStates");
                });

            modelBuilder.Entity("EzBooking.Models.PostalCode", b =>
                {
                    b.Property<int>("postalCode")
                        .HasColumnType("int");

                    b.Property<string>("concelho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("district")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("postalCode");

                    b.ToTable("PostalCodes");
                });

            modelBuilder.Entity("EzBooking.Models.Reservation", b =>
                {
                    b.Property<int>("id_reservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_reservation"), 1L, 1);

                    b.Property<int>("Houseid_house")
                        .HasColumnType("int");

                    b.Property<int?>("ReservationStatesid")
                        .HasColumnType("int");

                    b.Property<int>("Userid_user")
                        .HasColumnType("int");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("init_date")
                        .HasColumnType("datetime2");

                    b.HasKey("id_reservation");

                    b.HasIndex("Houseid_house");

                    b.HasIndex("ReservationStatesid");

                    b.HasIndex("Userid_user");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("EzBooking.Models.ReservationStates", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ReservationStates");
                });

            modelBuilder.Entity("EzBooking.Models.StatusHouse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("StatusHouses");
                });

            modelBuilder.Entity("EzBooking.Models.User", b =>
                {
                    b.Property<int>("id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_user"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("passwordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_user");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EzBooking.Models.House", b =>
                {
                    b.HasOne("EzBooking.Models.StatusHouse", "StatusHouse")
                        .WithMany()
                        .HasForeignKey("StatusHouseid");

                    b.HasOne("EzBooking.Models.PostalCode", "PostalCode")
                        .WithMany()
                        .HasForeignKey("postalCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PostalCode");

                    b.Navigation("StatusHouse");
                });

            modelBuilder.Entity("EzBooking.Models.Payment", b =>
                {
                    b.HasOne("EzBooking.Models.PaymentStates", "state")
                        .WithMany()
                        .HasForeignKey("stateid_paymentStates")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("state");
                });

            modelBuilder.Entity("EzBooking.Models.Reservation", b =>
                {
                    b.HasOne("EzBooking.Models.House", "House")
                        .WithMany()
                        .HasForeignKey("Houseid_house")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EzBooking.Models.ReservationStates", "ReservationStates")
                        .WithMany()
                        .HasForeignKey("ReservationStatesid");

                    b.HasOne("EzBooking.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Userid_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");

                    b.Navigation("ReservationStates");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
